// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.AI.Translator.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Destination for the finished translated documents
    /// </summary>
    public partial class TargetInput
    {
        /// <summary>
        /// Initializes a new instance of the TargetInput class.
        /// </summary>
        public TargetInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TargetInput class.
        /// </summary>
        /// <param name="targetUrl">Location of the folder / container with
        /// your documents</param>
        /// <param name="language">Target Language</param>
        /// <param name="category">Category / custom system for translation
        /// request</param>
        /// <param name="glossaries">List of Glossary</param>
        /// <param name="storageSource">Possible values include:
        /// 'AzureBlob'</param>
        public TargetInput(string targetUrl, string language, string category = default(string), IList<Glossary> glossaries = default(IList<Glossary>), StorageSource storageSource = default(StorageSource))
        {
            TargetUrl = targetUrl;
            Category = category;
            Language = language;
            Glossaries = glossaries;
            StorageSource = storageSource;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets location of the folder / container with your documents
        /// </summary>
        [JsonProperty(PropertyName = "targetUrl")]
        public string TargetUrl { get; set; }

        /// <summary>
        /// Gets or sets category / custom system for translation request
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets target Language
        /// </summary>
        [JsonProperty(PropertyName = "language")]
        public string Language { get; set; }

        /// <summary>
        /// Gets or sets list of Glossary
        /// </summary>
        [JsonProperty(PropertyName = "glossaries")]
        public IList<Glossary> Glossaries { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'AzureBlob'
        /// </summary>
        [JsonProperty(PropertyName = "storageSource")]
        public StorageSource StorageSource { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TargetUrl == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TargetUrl");
            }
            if (Language == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Language");
            }
            if (Glossaries != null)
            {
                foreach (var element in Glossaries)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
