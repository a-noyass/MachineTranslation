// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using Newtonsoft.Json;
using System.Linq;

namespace Azure.AI.Translator.Models
{
    public partial class StatusSummary
    {
        /// <summary>
        /// Initializes a new instance of the StatusSummary class.
        /// </summary>
        public StatusSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StatusSummary class.
        /// </summary>
        /// <param name="total">Total count</param>
        /// <param name="failed">Failed count</param>
        /// <param name="success">Number of Success</param>
        /// <param name="inProgress">Number of in progress</param>
        /// <param name="notYetStarted">Count of not yet started</param>
        /// <param name="cancelled">Number of cancelled</param>
        public StatusSummary(int? total = default(int?), int? failed = default(int?), int? success = default(int?), int? inProgress = default(int?), int? notYetStarted = default(int?), int? cancelled = default(int?))
        {
            Total = total;
            Failed = failed;
            Success = success;
            InProgress = inProgress;
            NotYetStarted = notYetStarted;
            Cancelled = cancelled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets total count
        /// </summary>
        [JsonProperty(PropertyName = "total")]
        public int? Total { get; set; }

        /// <summary>
        /// Gets or sets failed count
        /// </summary>
        [JsonProperty(PropertyName = "failed")]
        public int? Failed { get; set; }

        /// <summary>
        /// Gets or sets number of Success
        /// </summary>
        [JsonProperty(PropertyName = "success")]
        public int? Success { get; set; }

        /// <summary>
        /// Gets or sets number of in progress
        /// </summary>
        [JsonProperty(PropertyName = "inProgress")]
        public int? InProgress { get; set; }

        /// <summary>
        /// Gets or sets count of not yet started
        /// </summary>
        [JsonProperty(PropertyName = "notYetStarted")]
        public int? NotYetStarted { get; set; }

        /// <summary>
        /// Gets or sets number of cancelled
        /// </summary>
        [JsonProperty(PropertyName = "cancelled")]
        public int? Cancelled { get; set; }

    }
}
