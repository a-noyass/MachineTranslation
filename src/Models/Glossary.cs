// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.AI.Translator.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Glossary / translation memory for the request
    /// </summary>
    public partial class Glossary
    {
        /// <summary>
        /// Initializes a new instance of the Glossary class.
        /// </summary>
        public Glossary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Glossary class.
        /// </summary>
        /// <param name="glossaryUrl">Location of the glossary.
        /// We will use the file extension to extract the formating if the
        /// format parameter is not supplied.
        ///
        /// If the translation language pair is not present in the glossary, it
        /// will not be applied</param>
        /// <param name="format">Format</param>
        /// <param name="version">Version</param>
        /// <param name="storageSource">Possible values include:
        /// 'AzureBlob'</param>
        public Glossary(string glossaryUrl, string format = default(string), string version = default(string), string storageSource = default(string))
        {
            GlossaryUrl = glossaryUrl;
            Format = format;
            Version = version;
            StorageSource = storageSource;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets location of the glossary.
        /// We will use the file extension to extract the formating if the
        /// format parameter is not supplied.
        ///
        /// If the translation language pair is not present in the glossary, it
        /// will not be applied
        /// </summary>
        [JsonProperty(PropertyName = "glossaryUrl")]
        public string GlossaryUrl { get; set; }

        /// <summary>
        /// Gets or sets format
        /// </summary>
        [JsonProperty(PropertyName = "format")]
        public string Format { get; set; }

        /// <summary>
        /// Gets or sets version
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'AzureBlob'
        /// </summary>
        [JsonProperty(PropertyName = "storageSource")]
        public string StorageSource { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (GlossaryUrl == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "GlossaryUrl");
            }
        }
    }
}
