// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.AI.Translator.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class DocumentFilter
    {
        /// <summary>
        /// Initializes a new instance of the DocumentFilter class.
        /// </summary>
        public DocumentFilter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DocumentFilter class.
        /// </summary>
        /// <param name="prefix">A case-sensitive prefix string to filter
        /// documents in the source path for translation.
        /// For example, when using a Azure storage blob Uri, use the prefix to
        /// restrict sub folders for translation.</param>
        /// <param name="suffix">A case-sensitive suffix string to filter
        /// documents in the source path for translation.
        /// This is most often use for file extensions</param>
        public DocumentFilter(string prefix = default(string), string suffix = default(string))
        {
            Prefix = prefix;
            Suffix = suffix;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a case-sensitive prefix string to filter documents in
        /// the source path for translation.
        /// For example, when using a Azure storage blob Uri, use the prefix to
        /// restrict sub folders for translation.
        /// </summary>
        [JsonProperty(PropertyName = "prefix")]
        public string Prefix { get; set; }

        /// <summary>
        /// Gets or sets a case-sensitive suffix string to filter documents in
        /// the source path for translation.
        /// This is most often use for file extensions
        /// </summary>
        [JsonProperty(PropertyName = "suffix")]
        public string Suffix { get; set; }

    }
}
